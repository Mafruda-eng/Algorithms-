# Linear search : Checks each element one by one.
# Works on any array (sorted or unsorted).
# Time Complexity: O(n)
# Space Complexity: O(1)
def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

#Binary search : Only works on sorted arrays.
#Divides search range in half each time.
#Time Complexity: O(log n)
# Space Complexity: O(1)
def binary_search(arr, target):
    left, right = 0, len(arr)-1
    while left <= right:
        mid = (left + right) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            left = mid + 1
        else:
            right = mid - 1
    return -1

mj = [23, 5, 42, 12, 8, 19, 3]
target = 8

# Linear Search
linear_result = linear_search(mj, target)
print(f"Linear Search: Target found at index {linear_result}")

# Binary Search (requires sorted array)
sorted_array = merge_sort(mj.copy())
binary_result = binary_search(sorted_array, target)
print(f"Binary Search: Target found at index {binary_result} (in sorted array: {sorted_array})")
